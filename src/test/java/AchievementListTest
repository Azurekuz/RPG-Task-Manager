mport org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class TaskListTest {
    @Test

    public void TaskListTest(){
        //int id, String title,  int quality, boolean complete, String desc,
        //T\
        Achievement testAchievement1 = new Achievement(0, "title1", 2,false,"TASK TASK TASK");
        Achievement testAchievement2 = new Achievement(1, "title1", 2,false,"WORD WORD WORD");
        Achievement testAchievement3 = new Achievement(2, "title1", 1,false,"YEAH YEAH YEAH");
        Achievement testAchievement4 = new Achievement(3, "title1", 3,true,"YADDA YADDA YADDA");
        Achievement testAchievement5 = new Achievement(4, "title1", 5, true,"BLAH BLAH BLAH");
        AchievementList testAchievementList = new TaskList();
        //id, title, desc, quality, timeLimit, type, complete
        testAchievementList.addAchievement(testAchievement1);

        testAchievementList.addAchievement(testAchievement2);
        testAchievementList.addAchievement(testAchievement3);
        testAchievementList.addAchievement(testAchievement4);
        testAchievementList.addAchievement(testAchievement5);


        assertEquals(testAchievement1,testAchievementList.findAchievement(0));
        assertEquals(testAchievement2,testAchievementList.findAchievement(1));
        assertEquals(testAchievement3,testAchievementList.findAchievement(2));
        assertEquals(testAchievement4,testAchievementList.findAchievement(3));
        assertEquals(testAchievement5,testAchievementList.findAchievement(4));

        /*Test for non existent Achievements in the Achievement list*/
        assertThrows(NonExistentAchievementException.class(),testAchievementList.findAchievement(6));
        assertThrows(NonExistentAchievementException.class(),testAchievementList.findAchievement(7));
        assertThrows(NonExistentAchievementException.class(),testAchievementList.findAchievement(8));

        testAchievementList.clear();
        testAchievementList.addAchievement(testAchievement1);
        String stringToReturn=""
        assertEquals(stringToReturn = str(this.AchievementList.get(0).getId())+" "+this.AchievementList.get(0).getTitle()+" "+this.AchievementList.get(0).getDescription()+" "+str(this.AchievementList.get(0).getQuality())+" "+str(this.AchievementList.get(0).getComplete());,testAchievementList.toString());

        testAchievementList.clear();
        assertThrows(NonExistentAchievementException.class(),testAchievementList.toString());























    }